---
- tags:
    - objectstore_backup
  block:
    - name: '/usr/local/bin/mc --config-dir /etc/mc mb "{{ objectstore_backup__destination_name }}"/{{ objectstore_backup__destination_bucket }} # create destination
        bucket'
      ansible.builtin.command: /usr/local/bin/mc --config-dir /etc/mc mb "{{ objectstore_backup__destination_name }}"/{{ objectstore_backup__destination_bucket }}
      register: objectstore_backup__mb_result
      failed_when:
        - not (objectstore_backup__mb_result["rc"] == 0 or (objectstore_backup__mb_result["rc"] == 1 and "Your previous request to create the named bucket succeeded
          and you already own it" in objectstore_backup__mb_result["stderr"]) )
      changed_when:
        - not (objectstore_backup__mb_result["rc"] == 1 and "Your previous request to create the named bucket succeeded and you already own it" in objectstore_backup__mb_result["stderr"]
          )

    - name: Deploy systemd service and timer
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: /{{ item }}
        owner: root
        group: root
        mode: "0o644"
      notify: "objectstore_backup: systemctl daemon-reload"
      loop:
        - etc/systemd/system/objectstore-backup.service
        - etc/systemd/system/objectstore-backup.timer

    - name: Deploy systemd service wrapper script
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: /{{ item }}
        owner: root
        group: root
        mode: "0o755"
      loop:
        - usr/local/bin/mc-mirror.sh

    - name: Systemctl enable objectstore-backup.timer --now
      ansible.builtin.systemd:
        name: objectstore-backup.timer
        state: started
        enabled: true
