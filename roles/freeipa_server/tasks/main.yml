---
- tags:
    - freeipa_server
  block:
    - name: Check that the hostname has two-levels
      ansible.builtin.assert:
        that: ansible_facts["nodename"].split(".") | length >= 3
        fail_msg: '"{{ ansible_facts["nodename"] }} has less than two levels. This is required for FreeIPA to work.'

    - name: Check that the DNS reverse lookup config is working
      ansible.builtin.assert:
      # ansible determines the domain by using socket.gethostbyaddr() which is a DNS reverse lookup (see module_utils/facts/system/platform.py)
        that: ansible_facts["domain"] is defined and ansible_facts["domain"] | length
        fail_msg: DNS reverse lookup for "{{ ansible_facts["fqdn"] }}" failed. This is required for FreeIPA to work.

    - name: Use freeipa.ansible_freeipa.ipaserver role to install and configure FreeIPA as a server
      ansible.builtin.include_role:
        name: freeipa.ansible_freeipa.ipaserver
      vars:
        ipaadmin_password: "{{ freeipa_server__ipa_admin_password }}"
        ipaclient_mkhomedir: true
        ipaclient_no_ntp: true
        ipadm_password: "{{ freeipa_server__directory_manager_password }}"
        ipaserver_domain: "{{ freeipa_server__domain }}"
        ipaserver_realm: "{{ freeipa_server__realm }}"
        ipaserver_setup_firewalld: false

    # we need to use shell instead of command for the kerberos ticket to work
    - name: Kinit
      ansible.builtin.shell: echo '{{ freeipa_server__ipa_admin_password }}' | kinit

    - name: Ipa config-mod --defaultshell='/bin/bash' --pwdexpnotify=10
      ansible.builtin.command: ipa config-mod --defaultshell='/bin/bash' --pwdexpnotify=10
      register: freeipa_server__ipa_config_mod_result
      changed_when: '"no modifications" not in freeipa_server__ipa_config_mod_result["stderr"]'
      failed_when:
        - freeipa_server__ipa_config_mod_result["failed"] is defined
        - freeipa_server__ipa_config_mod_result["failed"]
        - '"no modifications" not in freeipa_server__ipa_config_mod_result["stderr"]'

    - name: Kdestroy
      ansible.builtin.command: kdestroy
